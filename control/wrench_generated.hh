/* Don't edit this; this code was generated by op_graph */

#pragma once
#include "third_party/experiments/eigen.hh"

namespace jet {
namespace control {
struct WrenchDelta {
  VecNd<3> force_N_error = VecNd<3>::Zero();
  VecNd<3> torque_Nm_error = VecNd<3>::Zero();
  static constexpr int force_N_error_ind = 0;
  static constexpr int force_N_error_dim = 3;
  static constexpr int torque_Nm_error_ind = 3;
  static constexpr int torque_Nm_error_dim = 3;
  static constexpr int DIM = 6;
  static VecNd<6> to_vector(const WrenchDelta &in_grp);
  static WrenchDelta from_vector(const VecNd<6> &in_vec);
};
struct Wrench {
  VecNd<3> force_N = VecNd<3>::Zero();
  VecNd<3> torque_Nm = VecNd<3>::Zero();
  static constexpr int force_N_ind = 0;
  static constexpr int force_N_dim = 3;
  static constexpr int torque_Nm_ind = 3;
  static constexpr int torque_Nm_dim = 3;
  static constexpr int DIM = 6;
  static VecNd<6> compute_delta(const Wrench &a, const Wrench &b);
  static Wrench apply_delta(const Wrench &a, const VecNd<6> &delta);
};
} // namespace control
} // namespace jet